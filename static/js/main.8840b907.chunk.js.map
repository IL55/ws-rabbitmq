{"version":3,"sources":["rabbit-viewer.js","app.js","index.js"],"names":["utf8Decoder","TextDecoder","RabbitViewer","state","error","client","subscriptions","withErrorHandling","fn","apply","arguments","console","_this","setState","withFormHandling","event","preventDefault","data","Object","toConsumableArray","Array","target","length","keys","reduce","acc","index","field","name","objectSpread","defineProperty","value","connect","_ref","url","Mqtt","on","topic","message","prevState","map","subscription","messages","concat","decode","endClient","end","disconnect","_this$state","unsubscribe","_ref2","publish","_ref3","document","getElementById","qos","subscribe","_ref4","_this$state2","some","_error","incomingSubscriptions","_ref5","filter","_this2","this","_this$state3","react_default","a","createElement","href","onSubmit","htmlFor","id","placeholder","defaultValue","required","type","options","onClick","className","_ref6","key","Component","App","rabbit_viewer_RabbitViewer","ReactDOM","render","app"],"mappings":"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","file":"static/js/main.8840b907.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Mqtt from 'mqtt';\n\nconst utf8Decoder = new TextDecoder('utf-8');\n\nexport default class RabbitViewer extends Component {\n  state = {\n    error: null,\n    client: null,\n    subscriptions: []\n  };\n\n  withErrorHandling = fn => (...args) => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      console.error(error);\n      this.setState({ error });\n    }\n  };\n\n  withFormHandling = fn =>\n    this.withErrorHandling(event => {\n      event.preventDefault();\n\n      const data = [...Array(event.target.length).keys()].reduce((acc, index) => {\n        const field = event.target[index];\n\n        if (!field.name) {\n          return acc;\n        }\n\n        return {\n          ...acc,\n          [field.name]: field.value\n        };\n      }, {});\n\n      return fn(data);\n    });\n\n  connect = this.withFormHandling(({ url }) => {\n    const client = Mqtt.connect(url);\n\n    client.on('connect', () => this.setState({ client }));\n\n    client.on('message', (topic, message) => {\n      this.setState(prevState => ({\n        subscriptions: prevState.subscriptions.map(subscription => {\n          if (subscription.topic !== topic) {\n            return subscription;\n          }\n\n          return {\n            ...subscription,\n            messages: [...subscription.messages, utf8Decoder.decode(message)]\n          };\n        })\n      }));\n    });\n  });\n\n  endClient = this.withErrorHandling(() => {\n    this.state.client.end(false, () =>\n      this.setState({\n        client: null\n      })\n    );\n  });\n\n  disconnect = this.withErrorHandling(() => {\n    const { client, subscriptions } = this.state;\n\n    if (subscriptions.length > 0) {\n      client.unsubscribe(subscriptions.map(({ topic }) => topic), () => this.endClient());\n    } else {\n      this.endClient();\n    }\n  });\n\n  publish = this.withFormHandling(({ topic, message }) => {\n    document.getElementById('publish-message').value = '';\n    this.state.client.publish(topic, message, { qos: 2 });\n  });\n\n  subscribe = this.withFormHandling(({ topic }) => {\n    document.getElementById('subscribe-topic').value = '';\n\n    const { client, subscriptions } = this.state;\n\n    if (subscriptions.some(subscription => subscription.topic === topic)) {\n      return;\n    }\n\n    client.subscribe(topic, { qos: 2 }, (_error, incomingSubscriptions) => {\n      this.setState(prevState => ({\n        subscriptions: [\n          ...prevState.subscriptions,\n          ...incomingSubscriptions.map(subscription => ({\n            topic: subscription.topic,\n            messages: []\n          }))\n        ]\n      }));\n    });\n  });\n\n  unsubscribe = this.withErrorHandling(topic => {\n    this.state.client.unsubscribe(topic, () =>\n      this.setState(({ subscriptions }) => ({\n        subscriptions: subscriptions.filter(subscription => subscription.topic !== topic)\n      }))\n    );\n  });\n\n  render() {\n    const { error, client, subscriptions } = this.state;\n\n    if (error) {\n      return (\n        <p>\n          Oops, something went wrong! <a href=\"/\">Reload</a>\n        </p>\n      );\n    }\n\n    if (client === null) {\n      return (\n        <form onSubmit={this.connect}>\n          <label htmlFor=\"url\">URL*:</label>{' '}\n          <input id=\"url\" name=\"url\" placeholder=\"ws://\" defaultValue=\"http://localhost:15675/ws\" required />{' '}\n          <input type=\"submit\" value=\"Connect\" />\n        </form>\n      );\n    }\n\n    return (\n      <div>\n        <div>\n          <h2>Status</h2>\n          <div>\n            Connected to {`${client.options.href} `}\n            <button type=\"button\" onClick={this.disconnect}>\n              Disconnect\n            </button>\n          </div>\n        </div>\n        <div>\n          <h2>Publish</h2>\n          <form onSubmit={this.publish}>\n            <div>\n              <label htmlFor=\"publish-topic\">Topic*:</label> <input id=\"publish-topic\" name=\"topic\" required />\n            </div>\n            <div>\n              <label htmlFor=\"publish-message\">Message*:</label> <input id=\"publish-message\" name=\"message\" required />\n            </div>\n            <input type=\"submit\" value=\"Publish\" />\n          </form>\n        </div>\n        <div>\n          <h2>Subscribe</h2>\n          <form onSubmit={this.subscribe}>\n            <label htmlFor=\"subscribe-topic\">Topic*:</label>{' '}\n            <input id=\"subscribe-topic\" name=\"topic\" required defaultValue=\"foo\" />{' '}\n            <input type=\"submit\" value=\"Subscribe\" />\n          </form>\n          <div className=\"topic-info\">\n            {subscriptions.map(({ topic, messages }) => (\n              <div key={topic}>\n                Message count for <strong>{topic}</strong>: {messages.length}{' '}\n                <button type=\"button\" onClick={() => this.unsubscribe(topic)}>\n                  Unsubscribe\n                </button>\n                <ul className=\"message-list\">\n                  {messages.map((message, index) => (\n                    <li key={index}>{message}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport RabbitViewer from './rabbit-viewer';\n\nconst App = () => <RabbitViewer />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './main.css';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}